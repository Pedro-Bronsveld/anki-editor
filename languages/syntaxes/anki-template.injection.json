{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"injectionSelector": "L:text.html.anki",
	"name": "Anki - Injected Template",
	"scopeName": "source.anki",
	"patterns": [
		{
			"include": "#anki-template-oneline-conditional"
		},
		{
			"include": "#anki-template"
		}
	],
	"repository": {
		"anki-template": {
			"begin": "{{",
			"end": "}}",
			"beginCaptures": {
				"0": { "name": "support.constant.handlebars.anki" }
			},
			"endCaptures": {
				"0": { "name": "support.constant.handlebars.anki" }
			},
			"patterns": [
				{ "include": "#anki-template-invalid-characters" },
				{ "include": "#anki-conditional-block" },
				{ "include": "#anki-template-segment" }
			],
			"name": "source.anki.template"
		},
		"anki-template-oneline-conditional": {
			"begin": "{{(?=\\s*[#^/])",
			"end": "}}",
			"beginCaptures": {
				"0": { "name": "keyword.control.anki.conditional.begin" }
			},
			"endCaptures": {
				"0": { "name": "keyword.control.anki.conditional.end" }
			},
			"patterns": [
				{ "include": "#anki-template-invalid-characters" },
				{ "include": "#anki-conditional-block" }
			],
			"name": "meta.anki.template.oneline.conditional"
		},
		"anki-template-invalid-characters": {
			"match": "[\"{}]",
			"name": "invalid.illegal.anki.template.characters"
		},
		"anki-conditional-block": {
			"begin": "(?<=(?:^|{{)\\s*)[#^/]",
			"end": "(?=}})",
			"beginCaptures": {
				"0": {
					"name": "keyword.control.anki.conditional.start"
				}
			},
			"patterns": [
				{ 	"include": "#anki-template-invalid-characters" },
				{
					"match": ":",
					"name": "invalid.illegal.anki.template.separator"
				},
				{
					"match": "(?<=[#^/\\s])[#^/]",
					"name": "invalid.illegal.anki.conditional"
				},
				{ 	"include": "#anki-field" }
			],
			"name": "meta.anki.conditional.block"
		},
		"anki-template-segment": {
			"begin": "(?:(:(?=[\\s\n]+))|(:)|(?<={{))",
			"beginCaptures": {
				"1": {
					"name": "invalid.illegal.anki.template.separator"
				},
				"2": {
					"name": "punctuation.separator.anki.segment"
				}
			},
			"end": "(?=:|}})",
			"patterns": [
				{ "include": "#anki-template-filter-invalid-characters" },
				{ "include": "#anki-template-filter-invalid" },
				{ "include": "#anki-template-filter" },
				{ "include": "#anki-template-filter-tts" },
				{ "include": "#anki-template-filter-invalid-start" },
				{ "include": "#anki-template-filter-invalid-end" },
				{ "include": "#anki-field" }
			],
			"name": "meta.anki.template.segment"
		},
		"anki-template-filter": {
			"match": "(?<=(?::|(?:{{|^)\\s*))(?:(tts|tts-voices|cloze(?:-only)?|hint|type|text|furigana|kana|kanji)|([^\"{}\\s:]+))(?=:)",
			"name": "meta.anki.template.filter.$1",
			"captures": {
				"1": { "name": "support.function.anki.filter.$1" }
			}
		},
		"anki-template-filter-invalid-characters": {
			"match": "[#^/\"{}]",
			"name": "invalid.illegal.anki.template.filter.characters"
		},
		"anki-template-filter-invalid": {
			"match": "(?<={{|^|\\s)(=[^{}\\s:]+)",
			"name": "invalid.illegal.anki.template.filter"
		},
		"anki-template-filter-tts": {
			"begin": "(?<=(?:{{|^)\\s*|:)(tts(?=\\s))",
			"beginCaptures": {
				"1": { "name": "support.function.anki.tts" }
			},
			"end": "(?=:)|(?=}})",
			"patterns": [
				{ "include": "#anki-template-filter-invalid-characters" },
				{ "include": "#tts-language" },
				{ "include": "#tts-language-option-value" },
				{ "include": "#tts-invalid-argument" }
			],
			"name": "meta.anki.template.filter.tts"
		},
		"tts-language": {
			"match": "(?<=tts\\s+)([^\\s:=,{}]+)([^\\s:{}]+)?",
			"name": "meta.anki.filter.tts.language",
			"captures": {
				"1": { "name": "string.anki.tts.language" },
				"2": { "name": "invalid.illegal.anki.tts.language.suffix" }
			}
		},
		"tts-language-option-value": {
			"match": "([a-z]+)(=)([^:\\s={}\"]+)?([^:\\s{}\"]+)?",
			"captures": {
				"1": { "name": "variable.parameter.anki.tts" },
				"2": { "name": "keyword.operator.assignment.anki" },
				"3": {
					"name": "meta.anki.tts.option.value",
					"patterns": [
						{ "include": "#tts-option-decimal" },
						{ "include": "#tts-option-string-list" }
					]
				},
				"4": { "name": "invalid.illegal.anki.tts.option.suffix" }
			},
			"name": "meta.anki.tts.option"
		},
		"tts-invalid-argument": {
			"match": "(?<=\\s)=[^\\s:{}]*",
			"name": "invalid.illegal.anki.tts.argument"
		},
		"tts-option-string-list": {
			"patterns": [
				{
					"match": "[^\\s,]",
					"name": "string.anki.tts.option.value"
				},
				{
					"match": ",",
					"name": "punctuation.anki.tts.option.separator"
				}
			]
		},
		"tts-option-decimal": {
			"match": "(?<==)\\d*\\.?\\d*(?=[:}\\s\n]|$)",
			"name": "constant.numeric.anki.tts.option.decimal"
		},
		"anki-template-filter-invalid-start": {
			"begin": "(?<=:)(?:\\s|$)",
			"end": "(?=:)|(?=}})",
			"name": "invalid.illegal.anki.template.filter.start"
		},
		"anki-template-filter-invalid-end": {
			"begin": "(?<=:|(?:^|{{)\\s*)[^\"{}\\s]+\\s+(?=:)",
			"end": ":|(?=}})",
			"name": "invalid.illegal.anki.template.filter.end"
		},
		"anki-field-special": {
			"name": "variable.other.constant.anki.special-field",
			"match": "(?<=[#^\/\\s:{}\"])(Tags|Type|Deck|Subdeck|CardFlag|Card|FrontSide)($|\\s*$)"
		},
		"anki-field": {
			"name": "variable.anki.field",
			"match": "[^#^\/\\s:{}\"]+([^:{}\\s\"]|\\s(?!\\s*(}}|$)))*(?!.*:)",
			"captures": {
				"0": { "patterns": [{ "include": "#anki-field-special" }] }
			}
		}
	}
}