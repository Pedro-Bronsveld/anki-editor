{
  "name": "anki-editor",
  "displayName": "Anki Editor",
  "description": "Edit Anki card templates in Visual Studio Code with syntax highlighting and intellisense.",
  "version": "1.0.0",
  "author": "Pedro Bronsveld",
  "repository": {
    "type": "git",
    "url": "https://github.com/Pedro-Bronsveld/anki-editor"
  },
  "icon": "resources/icons/anki-editor-icon.png",
  "engines": {
    "vscode": "^1.74.0"
  },
  "categories": [
    "Programming Languages",
    "Education"
  ],
  "activationEvents": [
    "onCommand:anki-editor.helloWorld",
    "anki-editor.workspaceInit",
    "onFileSystem:anki-editor"
  ],
  "main": "./out/extension.js",
  "browser": "./out/web-extension.js",
  "contributes": {
    "commands": [
      {
        "command": "anki-editor.openAsWorkspaceFolder",
        "title": "Open as workspace folder",
        "category": "Anki Editor",
        "icon": "$(root-folder-opened)"
      },
      {
        "command": "anki-editor.addFolderToWorkspace",
        "title": "Add to current workspace as folder",
        "category": "Anki Editor",
        "icon": "$(folder-library)"
      },
      {
        "command": "anki-editor.refreshNoteTypesTree",
        "title": "Refresh Note Types",
        "category": "Anki Editor",
        "icon": "$(refresh)"
      },
      {
        "command": "anki-editor.clearCache",
        "title": "Clear Cache",
        "category": "Anki Editor",
        "icon": "$(clear-all)"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "anki-editor",
          "title": "Anki Editor",
          "icon": "resources/icons/activity-bar-icon.svg"
        }
      ]
    },
    "views": {
      "anki-editor": [
        {
          "id": "note-types-tree",
          "name": "Note Types"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "anki-editor.refreshNoteTypesTree",
          "when": "view == note-types-tree",
          "group": "navigation"
        },
        {
          "command": "anki-editor.openAsWorkspaceFolder",
          "when": "view == note-types-tree",
          "group": "navigation"
        },
        {
          "command": "anki-editor.addFolderToWorkspace",
          "when": "view == note-types-tree",
          "group": "navigation"
        }
      ]
    },
    "languages": [
      {
        "id": "anki-template",
        "aliases": [
          "Anki Template",
          "anki-template"
        ],
        "extensions": [
          ".template.anki"
        ],
        "configuration": "./languages/language-configuration.json",
        "icon": {
          "dark": "resources/icons/anki-template-file-icon.svg",
          "light": "resources/icons/anki-template-file-icon.svg"
        }
      }
    ],
    "grammars": [
      {
        "language": "anki-template",
        "scopeName": "text.html.anki",
        "path": "./languages/syntaxes/anki.tmLanguage.json",
        "embeddedLanguages": {
          "text.html": "html",
          "source.anki": "anki-template",
          "source.js": "javascript",
          "source.css": "css"
        }
      },
      {
        "path": "./languages/syntaxes/anki-template.injection.json",
        "scopeName": "source.anki",
        "injectTo": [
          "text.html.anki"
        ]
      }
    ],
    "configuration": {
      "title": "Anki Editor",
      "properties": {
        "anki-editor.origin": {
          "title": "Anki-Connect Origin",
          "type": "string",
          "default": "http://127.0.0.1:8765",
          "pattern": "^https?://",
          "patternErrorMessage": "Must start with http:// or https://",
          "examples": [
            "http://localhost:8765"
          ],
          "description": "Url that Anki-Connect can be reached at."
        },
        "anki-editor.apiKey": {
          "title": "Anki-Connect API key",
          "default": null,
          "type": "string",
          "markdownDescription": "Anki-Connect API key.\n\nThis must match the value set for `\"apiKey\"` in the Anki-Connect config if it's set to anything other than `null`."
        },
        "anki-editor.invalidFieldDiagnostics": {
          "title": "Invalid Field Diagnostics",
          "type": "boolean",
          "default": true,
          "description": "Show errors for field names that are not part of the note type."
        },
        "anki-editor.invalidFilterDiagnostics": {
          "title": "Invalid Filter Diagnostics",
          "type": "boolean",
          "default": true,
          "description": "Show errors for filter names that are not built into Anki."
        },
        "anki-editor.customFieldNames": {
          "title": "Custom Fields",
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^[^#^/\\s:{}\"]+([^:{}\\s\"]|\\s(?!\\s*(}}|$)))*$",
            "patternErrorMessage": "Restrictions for custom field:\n• Can't start with # ^ /\n• Can't contain : \" { }\n• Can't start or end with spaces"
          },
          "default": [],
          "markdownDescription": "Extra field names to show in completion suggestions, and to ignore when checking errors."
        },
        "anki-editor.customFilterNames": {
          "title": "Custom Filters",
          "type": "array",
          "items": {
            "type": "string",
            "pattern": "^[^#^/\\s:{}\"]+$",
            "patternErrorMessage": "Custom filter names can't contain spaces or # ^ / : \" { }"
          },
          "default": [],
          "description": "Extra filter names to show in completion suggestions, and to ignore when checking errors."
        }
      }
    }
  },
  "scripts": {
    "esbuild-common": "esbuild ./src/extension.ts --bundle --external:vscode --format=cjs",
    "esbuild-native": "npm run esbuild-common -- --outfile=out/extension.js --main-fields=module,main --platform=node",
    "esbuild-web": "npm run esbuild-common -- --outfile=out/web-extension.js --main-fields=browser,module,main --platform=browser",
    "build-prod": "npm run esbuild-native -- --minify & npm run esbuild-web -- --minify",
    "build": "npm run esbuild-native -- --sourcemap",
    "watch": "npm run build -- --watch",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "test-compile": "tsc -p ./",
    "vscode:prepublish": "npm run build-prod",
    "package": "vsce package",
    "typecheck": "tsc --noEmit"
  },
  "devDependencies": {
    "@types/glob": "^8.0.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "16.x",
    "@types/vscode": "^1.74.0",
    "@typescript-eslint/eslint-plugin": "^5.45.0",
    "@typescript-eslint/parser": "^5.45.0",
    "@vscode/test-electron": "^2.2.0",
    "@vscode/vsce": "^2.19.0",
    "esbuild": "^0.16.17",
    "eslint": "^8.28.0",
    "glob": "^8.0.3",
    "mocha": "^10.1.0",
    "typescript": "^4.9.5"
  },
  "dependencies": {
    "@autoanki/anki-connect": "^0.1.4",
    "@ts-morph/bootstrap": "^0.18.0",
    "axios": "^1.1.3",
    "vscode-css-languageservice": "^6.2.3",
    "vscode-html-languageservice": "^5.0.4"
  }
}
